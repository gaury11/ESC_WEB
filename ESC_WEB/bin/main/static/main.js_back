
let isSubscribed = false;
let swRegistration = null;

const applicationServerPublicKey = 'BHGvZYkIrHhJUdOnF9K5HTHIxZ2qcF9fD0SPDadmapVtY9akdKOM9sgJonTRrwvtQy0ZMprZZaKvzxH1c7FP2aE';

function urlB64ToUint8Array(base64String) {
	const padding = '='.repeat((4 - base64String.length % 4) % 4);
	const base64 = (base64String + padding)
	  .replace(/\-/g, '+')
	  .replace(/_/g, '/');
  
	const rawData = window.atob(base64);
	const outputArray = new Uint8Array(rawData.length);
  
	for (let i = 0; i < rawData.length; ++i) {
	  outputArray[i] = rawData.charCodeAt(i);
	}
	return outputArray;
  }

if ('serviceWorker' in navigator && 'PushManager' in window) {
	console.log('Service Worker and Push is supported'); 
	//alert("psuh is supported");
	
	navigator.serviceWorker.register('sw.js')
	.then(function(swReg) {
		console.log('Service Worker is registered : ' + swReg);

		swRegistration = swReg;

		initialiseUI(); 
		
	})
	.catch(function(error) {
		console.error('Service Worker Error', error);
	});
	
}

function initialiseUI(){
	
	$("#swBtn").click(function(){
		
		if(isSubscribed){
			alert("test");	
		}else{
			subscribeUser();
		}


	});
}

function subscribeUser(){
	const applicationServerKey = urlB64ToUint8Array(applicationServerPublicKey);

	swRegistration.pushManager.subscribe({
	  userVisibleOnly: true,
	  applicationServerKey: applicationServerKey
	})
	.then(function(subscription){
		console.log('User id subscribed: ', subscription);
	})
	.catch(function(err){
		console.log('Failed to subscribe the user: ', err);
	})
}


function unsubscribeUser(){
	swRegistration.pushManager.getSubscription()
	.then(function(subscription){
		if(subscription){
			return subscription.unsubscribe();
		}
	})

}